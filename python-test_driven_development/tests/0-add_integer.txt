The ``0-add_integer.py`` module
============================
Using ``add_integer.py``
---------------------
This is a text file in reStructuredText format.
It contains a test for the add_integer function in the 0-add_integer module.
First import ``add_integer`` from the ``0-add_integer`` module:

    Test 00 Open 0-add_integer
    >>> add_integer = __import__('0-add_integer').add_integer

Now test:
    Test 01: Two positive integers passed
    >>> add_integer(6, 7)
    13

    Test 02: A positive and a negative integer passed
    >>> add_integer(6, -5)
    1

    Test 03: A positive integer and a float type passed
    >>> add_integer(6, 1.5)
    7

    Test 04: A single positive integer
    >>> add_integer(6)
    104

    Test 05: At least one of the values is not a number
    >>> add_integer(6, "3")
    Traceback (most recent call last):
    TypeError: b must be an integer

    Test 06: none of the values is number
    >>> add_integer("6", "4")
    Traceback (most recent call last):
    TypeError: a must be an integer

    Test 07: zero as first value passed
    >>> add_integer(0)
    98

    Test 08: a value passed as infinity
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
