The ``2-matrix_divided.py`` module
============================
Using ``matrix_divided.py``
---------------------
This is a text file in reStructuredText format.
It contains a test for the matrix_divided function in the 2-matrix_divided module.
First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    Test 00 Open 2-matrix_divided
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> matrix_2 = [[1, 2],[4, 5, 6]]

Now test:
    Test 01: matrix divided by an integer
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    Test 02: matrix divided by a negative integer
    >>> matrix_divided(matrix, -3)
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

    Test 03: matrix divided by zero
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    Test 04: matrix with rows of different size
    >>> matrix_divided(matrix_2, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    Test 05: matrix with data type not int and float
    >>> matrix_divided(matrix, "3")
    Traceback (most recent call last):
    TypeError: div must be a number

    Test 06: One matrix divide None
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    TypeError: div must be a number
